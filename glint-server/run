#!/usr/bin/env node

var colors = require('colors');
var fs = require('fs');
var meta = JSON.parse(fs.readFileSync('./package.json'));
var program = require('commander');

program
  .version(meta.version);

program
  .option('-e, --etcd <etcd>', 'IP/port of the etcd server to connect to (optional - defaults to 127.0.0.1:2379).', '127.0.0.1:2379')
  .option('-f, --force-master [val]', 'Force this node to become the new master; use this option very carefully!', false)
  .option('-m, --master <master>', 'Override the IP/port that the master will listen on; defaults to *:5671.', '*:5671')
  .option('-s, --slave <master>', 'Run as a slave; provide the IP/port of the master node (mandatory).');

program.on('--help', function(){
  console.log('  By default, this application will fire up a master instance.');
  console.log('');
});

program.parse(process.argv);

require("babel-polyfill");

require("babel-core/register")({
  ignore: false,
  only: /.+(?:(?:\.es6\.js)|(?:.es6))$/,
  extensions: ['.js', '.es6.js', '.es6' ],
  sourceMap: true
});

if (program.slave) {
  var masterToConnectTo = program.slave.split(':');

  var slaveOptions = {
    masterHost: masterToConnectTo[0],
    masterPort: masterToConnectTo[1]
  };

  console.log('Initializing slave, connecting to: %s', program.slave);
  require('./lib/slave.es6')(slaveOptions);
} else {
  var etcdHost = program.etcd.split(':');
  var masterHost = program.master.split(':');

  var masterOptions = {
    forceMaster: program.forceMaster,
    etcdHost: etcdHost[0],
    etcdPort: etcdHost[1],
    masterHost: masterHost[0],
    masterPort: masterHost[1]
  };
  console.log('Initializing new master (binding to %s); forcing this instance to be the new master: %s', program.master, program.forceMaster);
  require('./lib/master.es6')(masterOptions);
}
